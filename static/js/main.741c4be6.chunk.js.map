{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","ms_sans_serif","ms_sans_serif_bold","styleReset","AboutMe","style","marginBottom","fontWeight","color","Contact","useState","helper","setHelper","reset","onMouseLeave","display","flexWrap","justifyContent","padding","minHeight","alignItems","header","icon","value","map","item","variant","onMouseOver","onClick","includes","window","open","text","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","background","border","class","data-icon","data-inline","width","textAlign","margin","App","tab","setTab","theme","original","size","src","resizable","className","position","top","right","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.741c4be6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport {\n    styleReset,\n    Avatar,\n    Window,\n    WindowContent,\n    WindowHeader,\n    Button,\n    Toolbar,\n    Divider,\n    Hourglass,\n    Fieldset,\n} from 'react95';\n\nimport original from 'react95/dist/themes/original';\nimport ms_sans_serif from 'react95/dist/fonts/ms_sans_serif.woff2';\nimport ms_sans_serif_bold from 'react95/dist/fonts/ms_sans_serif_bold.woff2';\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: 'ms_sans_serif';\n    src: url('${ms_sans_serif}') format('woff2');\n    font-weight: 400;\n    font-style: normal\n  }\n  @font-face {\n    font-family: 'ms_sans_serif';\n    src: url('${ms_sans_serif_bold}') format('woff2');\n    font-weight: bold;\n    font-style: normal\n  }\n  body {\n    font-family: 'ms_sans_serif';\n  }\n  ${styleReset}\n`;\n\nfunction copyToClipboard(text, setHelper) {\n    let dummy = document.createElement('textarea');\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand('copy');\n    document.body.removeChild(dummy);\n    setHelper('copied to clipboard!');\n}\n\nconst AboutMe = () => (\n    <div>\n        <p style={{ marginBottom: 10 }}>\n            Hi, My name is{' '}\n            <span style={{ fontWeight: 900, color: 'blue' }}>Soheil Hajimohammadi</span>. I am a\n            software engineer based in Vancouver, Canada üá®üá¶.\n        </p>\n        <p style={{ marginBottom: 10 }}>\n            Currently, I work as the director of software engineering at a canadian tech company\n            called Bananatag üçå. At Bananatag, we create communication software for enterprise\n            companies. Our solution is used by big companies and household brands (e.g. GE, WorkDay,\n            Twitter, ‚Ä¶) in order to improve internal communications. We use a modern tech stack and\n            we are always hiring for humble, hungry, and smart engineers.\n        </p>\n        <p style={{ marginBottom: 10 }}>\n            I love coding and problem-solving. I have built high-quality end-to-end software\n            applications from the ground up to serve enterprise needs. As the director of\n            engineering at Bananatag, I lead technical initiatives among multiple engineering teams\n            consisting of a lot of talented and smart engineers and I occasionally create internal\n            web/CLI tools to reduce toil and improve internal processes.\n        </p>\n        <p>\n            The software industry has been an unconventional path for me. I have navigated a lot of\n            pivots in my life and my career in order to find the right niche that I both like and I\n            am good at. I think the only way to grow is to feel uncomfortable and constantly place\n            yourself at the edge of the unknown. I consider myself a lifelong learner and I am\n            always on the lookout to expand my knowledge and discover new technologies.\n        </p>\n    </div>\n);\n\nfunction Contact() {\n    const [helper, setHelper] = useState('');\n    const reset = () => {\n        setHelper('');\n    };\n    const items = [\n        {\n            header: 'Email',\n            icon: 'logos:google-gmail',\n            value: 'soheil.hm@gmail.com',\n            color: null,\n        },\n        {\n            header: 'Twitter',\n            icon: 'mdi-twitter',\n            value: 'https://twitter.com/soheil_hm',\n            color: '#1ca1f2',\n        },\n        {\n            header: 'LinkedIn',\n            icon: 'brandico:linkedin-rect',\n            value: 'https://linkedin.com/in/soheil-hajimohammadi-9b09aa59',\n            color: '#0966c2',\n        },\n        {\n            header: 'Github',\n            icon: 'codicon:github-inverted',\n            value: 'https://github.com/soheilhm',\n            color: null,\n        },\n        {\n            header: 'Medium',\n            icon: 'carbon:logo-medium',\n            value: 'https://medium.com/@soheilhm',\n            color: null,\n        },\n    ];\n    return (\n        <div\n            onMouseLeave={() => {\n                reset();\n            }}\n        >\n            <Fieldset\n                style={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'center',\n                    padding: '10px 0',\n                    minHeight: 50,\n                    alignItems: 'center',\n                }}\n            >\n                {items.map((item) => (\n                    <div key={item.header}>\n                        <Button\n                            variant=\"flat\"\n                            onMouseOver={() => {\n                                setHelper(item.value);\n                            }}\n                            onMouseLeave={() => {\n                                reset();\n                            }}\n                            onClick={() => {\n                                if (item.value.includes('https')) {\n                                    window.open(item.value);\n                                } else {\n                                    copyToClipboard(item.value, setHelper);\n                                }\n                            }}\n                            style={{\n                                background: 'transparent',\n                                border: 'none',\n                            }}\n                        >\n                            <span\n                                class=\"iconify\"\n                                data-icon={item.icon}\n                                data-inline=\"false\"\n                                width=\"32\"\n                                style={{ color: item.color }}\n                            ></span>\n                        </Button>\n                    </div>\n                ))}\n            </Fieldset>\n            <p style={{ textAlign: 'center', margin: '10px 0' }}>{helper}</p>\n        </div>\n    );\n}\n\nfunction App() {\n    const [tab, setTab] = useState(0);\n    return (\n        <div\n            style={{\n                padding: '1rem',\n                background: 'teal',\n            }}\n        >\n            <GlobalStyles />\n            <ThemeProvider theme={original}>\n                <Avatar\n                    size={100}\n                    src={process.env.PUBLIC_URL + '/assets/profile.jpeg'}\n                    style={{ margin: '0px auto 25px' }}\n                />\n                <Window resizable className=\"window\" style={{ width: '100%', minHeight: 200 }}>\n                    <Hourglass size={26} style={{ position: 'absolute', top: 10, right: 10 }} />\n                    <WindowHeader className=\"window-header\">\n                        <span>{'> Hello world!'} </span>\n                    </WindowHeader>\n                    <Toolbar>\n                        <Button variant=\"menu\" size=\"sm\" onClick={() => setTab(0)}>\n                            <span\n                                style={{\n                                    fontWeight: tab === 0 ? '700' : '500',\n                                }}\n                            >\n                                About\n                            </span>\n                        </Button>\n                        <Button variant=\"menu\" size=\"sm\" onClick={() => setTab(1)}>\n                            <span\n                                style={{\n                                    fontWeight: tab === 1 ? '700' : '500',\n                                }}\n                            >\n                                Contact\n                            </span>\n                        </Button>\n                    </Toolbar>\n                    <Divider />\n                    <WindowContent>\n                        <div\n                            className=\"scrollbar\"\n                            style={{ maxHeight: '300px', overflowY: 'scroll', minHeight: 150 }}\n                        >\n                            {tab === 0 ? <AboutMe /> : <Contact />}\n                        </div>\n                    </WindowContent>\n                </Window>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}